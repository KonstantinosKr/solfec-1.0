# LARGE DISPLACEMENT ELASTIC RESPONSE OF A HINGED SPHERICAL SHELL UNDER UNIFORM PRESSURE LOADING

def create_simulation (step, stop, outstep):
    Dir_out='out/tests/BM13_coarse_'+str(step)+'s'
    GEOMETRIC_EPSILON (1E-5)
  
    solfec=SOLFEC ('QUASI_STATIC', step, Dir_out)
    
    Nodes_M1=[
          0.0000000E+00, 0.1570000E+04, 0.0000000E+00,                                           
          0.1299675E+02, 0.1557021E+04,-0.4650415E+02,
          0.0000000E+00, 0.1375830E+04, 0.5419060E+02,
          0.1312308E+02, 0.1364598E+04, 0.7234164E+01,
          0.0000000E+00, 0.1179910E+04, 0.9336650E+02,
          0.1331064E+02, 0.1172296E+04, 0.4573903E+02,
          0.0000000E+00, 0.9827670E+03, 0.1170670E+03,
          0.1342816E+02, 0.9789208E+03, 0.6901945E+02,
          0.0000000E+00, 0.7850000E+03, 0.1250010E+03,
          0.1346816E+02, 0.7850000E+03, 0.7681033E+02,
          0.0000000E+00, 0.5872330E+03, 0.1170670E+03,
          0.1342816E+02, 0.5910793E+03, 0.6901945E+02,
          0.0000000E+00, 0.3900940E+03, 0.9336650E+02,
          0.1331063E+02, 0.3977077E+03, 0.4573904E+02,
          0.0000000E+00, 0.1941740E+03, 0.5419060E+02,
          0.1312308E+02, 0.2054056E+03, 0.7234140E+01,
          0.0000000E+00, 0.0000000E+00, 0.0000000E+00,
          0.1299677E+02, 0.1297852E+02,-0.4650422E+02,
          0.2032294E+03, 0.1556896E+04, 0.6696097E+01,
          0.2032294E+03, 0.1364598E+04, 0.6036382E+02,
          0.2034220E+03, 0.1172296E+04, 0.9887021E+02,
          0.2035574E+03, 0.9789207E+03, 0.1221561E+03,
          0.2036274E+03, 0.7850000E+03, 0.1299554E+03,
          0.2036274E+03, 0.5910793E+03, 0.1221757E+03,
          0.2035574E+03, 0.3977078E+03, 0.9890807E+02,
          0.2034219E+03, 0.2054055E+03, 0.6041761E+02,
          0.2032294E+03, 0.1310388E+02, 0.6696030E+01,
          0.3953143E+03, 0.1556708E+04, 0.4534638E+02,
          0.3953144E+03, 0.1364407E+04, 0.9901537E+02,
          0.3954491E+03, 0.1172163E+04, 0.1374835E+03,
          0.3955440E+03, 0.9788521E+03, 0.1607428E+03,
          0.3955931E+03, 0.7850000E+03, 0.1685296E+03,
          0.3955931E+03, 0.5911479E+03, 0.1607527E+03,
          0.3955440E+03, 0.3978412E+03, 0.1375025E+03,
          0.1919660E+03, 0.1570000E+04, 0.5364970E+02,
          0.3954491E+03, 0.2055967E+03, 0.9904242E+02,
          0.1919660E+03, 0.1375830E+04, 0.1078400E+03,
          0.3953143E+03, 0.1329162E+02, 0.4534631E+02,
          0.1919660E+03, 0.1179910E+04, 0.1470160E+03,
          0.5895696E+03, 0.1556589E+04, 0.6889223E+02,
          0.1919660E+03, 0.9827670E+03, 0.1707170E+03,
          0.5895696E+03, 0.1364271E+04, 0.1225665E+03,
          0.1919660E+03, 0.7850000E+03, 0.1786510E+03,
          0.5896391E+03, 0.1172068E+04, 0.1610077E+03,
          0.1919660E+03, 0.5872330E+03, 0.1707170E+03,
          0.5896880E+03, 0.9788032E+03, 0.1842483E+03,
          0.1919660E+03, 0.3900940E+03, 0.1470160E+03,
          0.5897132E+03, 0.7850000E+03, 0.1920264E+03,
          0.1919660E+03, 0.1941740E+03, 0.1078400E+03,
          0.5897133E+03, 0.5911969E+03, 0.1842514E+03,
          0.1919660E+03, 0.0000000E+00, 0.5364970E+02,
          0.5896880E+03, 0.3979362E+03, 0.1610136E+03,
          0.5896391E+03, 0.2057328E+03, 0.1225749E+03,
          0.5895696E+03, 0.1341026E+02, 0.6889217E+02,
          0.7850000E+03, 0.1556549E+04, 0.7680494E+02,
          0.7850000E+03, 0.1364200E+04, 0.1304876E+03,
          0.7850000E+03, 0.1172018E+04, 0.1689162E+03,
          0.7850000E+03, 0.9787778E+03, 0.1921480E+03,
          0.7850000E+03, 0.7850000E+03, 0.1999210E+03,
          0.7850000E+03, 0.5912222E+03, 0.1921480E+03,
          0.7850000E+03, 0.3979857E+03, 0.1689162E+03,
          0.7850000E+03, 0.2058035E+03, 0.1304876E+03,
          0.7850000E+03, 0.1345080E+02, 0.7680487E+02,
          0.9804304E+03, 0.1556589E+04, 0.6889223E+02,
          0.9804303E+03, 0.1364200E+04, 0.1225862E+03,
          0.9803609E+03, 0.1172018E+04, 0.1610176E+03,
          0.9803120E+03, 0.9787777E+03, 0.1842514E+03,
          0.9802868E+03, 0.7850000E+03, 0.1920264E+03,
          0.3876580E+03, 0.1570000E+04, 0.9297240E+02,
          0.9802867E+03, 0.5912224E+03, 0.1842524E+03,
          0.3876580E+03, 0.1375830E+04, 0.1471630E+03,
          0.9803120E+03, 0.3979857E+03, 0.1610196E+03,
          0.3876580E+03, 0.1179910E+04, 0.1863390E+03,
          0.9803609E+03, 0.2058035E+03, 0.1225890E+03,
          0.3876580E+03, 0.9827670E+03, 0.2100400E+03,
          0.9804304E+03, 0.1341025E+02, 0.6889217E+02,
          0.3876580E+03, 0.7850000E+03, 0.2179740E+03,
          0.1174684E+04, 0.1556708E+04, 0.4534639E+02,
          0.3876580E+03, 0.5872330E+03, 0.2100400E+03,
          0.1174684E+04, 0.1364271E+04, 0.9905336E+02,
          0.3876580E+03, 0.3900940E+03, 0.1863390E+03,
          0.1174549E+04, 0.1172068E+04, 0.1375025E+03,
          0.3876580E+03, 0.1941740E+03, 0.1471630E+03,
          0.1174454E+04, 0.9788032E+03, 0.1607487E+03,
          0.3876580E+03, 0.0000000E+00, 0.9297240E+02,
          0.1174405E+04, 0.7850000E+03, 0.1685296E+03,
          0.1174405E+04, 0.5911969E+03, 0.1607546E+03,
          0.1174454E+04, 0.3979362E+03, 0.1375140E+03,
          0.1174549E+04, 0.2057328E+03, 0.9906964E+02,
          0.1174684E+04, 0.1329161E+02, 0.4534632E+02,
          0.1366767E+04, 0.1556896E+04, 0.6696084E+01,
          0.1366767E+04, 0.1364407E+04, 0.6041714E+02,
          0.1366574E+04, 0.1172163E+04, 0.9889687E+02,
          0.1366439E+04, 0.9788521E+03, 0.1221644E+03,
          0.1366369E+04, 0.7850000E+03, 0.1299554E+03,
          0.1366369E+04, 0.5911479E+03, 0.1221784E+03,
          0.1366439E+04, 0.3978412E+03, 0.9892409E+02,
          0.1366574E+04, 0.2055967E+03, 0.6045582E+02,
          0.1366767E+04, 0.1310389E+02, 0.6696018E+01,
          0.1557004E+04, 0.1557021E+04,-0.4650422E+02,
          0.1556877E+04, 0.1364598E+04, 0.7234097E+01,
          0.1556690E+04, 0.1172296E+04, 0.4573896E+02,
          0.5856960E+03, 0.1570000E+04, 0.1169430E+03,
          0.1556572E+04, 0.9789208E+03, 0.6901938E+02,
          0.5856960E+03, 0.1375830E+04, 0.1711340E+03,
          0.1556532E+04, 0.7850000E+03, 0.7681026E+02,
          0.5856960E+03, 0.1179910E+04, 0.2103100E+03,
          0.1556572E+04, 0.5910793E+03, 0.6901939E+02,
          0.5856960E+03, 0.9827670E+03, 0.2340110E+03,
          0.1556690E+04, 0.3977078E+03, 0.4573897E+02,
          0.5856960E+03, 0.7850000E+03, 0.2419450E+03,
          0.1556877E+04, 0.2054056E+03, 0.7234073E+01,
          0.5856960E+03, 0.5872330E+03, 0.2340110E+03,
          0.1557004E+04, 0.1297854E+02,-0.4650428E+02,
          0.5856960E+03, 0.3900940E+03, 0.2103100E+03,
         -0.1299675E+02, 0.1582979E+04, 0.4650415E+02,
          0.5856960E+03, 0.1941740E+03, 0.1711340E+03,
         -0.1312308E+02, 0.1387062E+04, 0.1011470E+03,
          0.5856960E+03, 0.0000000E+00, 0.1169430E+03,
         -0.1331064E+02, 0.1187524E+04, 0.1409940E+03,
         -0.1342816E+02, 0.9866132E+03, 0.1651145E+03,
         -0.1346816E+02, 0.7850000E+03, 0.1731917E+03,
         -0.1342816E+02, 0.5833867E+03, 0.1651145E+03,
         -0.1331063E+02, 0.3824803E+03, 0.1409940E+03,
         -0.1312308E+02, 0.1829424E+03, 0.1011471E+03,
         -0.1299677E+02,-0.1297852E+02, 0.4650422E+02,
          0.1807026E+03, 0.1583104E+04, 0.1006033E+03,
          0.1807026E+03, 0.1387062E+04, 0.1553162E+03,
          0.1805100E+03, 0.1187524E+04, 0.1951618E+03,
          0.1803746E+03, 0.9866133E+03, 0.2192779E+03,
          0.1803046E+03, 0.7850000E+03, 0.2273466E+03,
          0.1803046E+03, 0.5833867E+03, 0.2192583E+03,
          0.1803746E+03, 0.3824802E+03, 0.1951239E+03,
          0.1805101E+03, 0.1829425E+03, 0.1552624E+03,
          0.1807026E+03,-0.1310388E+02, 0.1006034E+03,
          0.3800017E+03, 0.1583292E+04, 0.1405984E+03,
          0.7850000E+03, 0.1570000E+04, 0.1250010E+03,
          0.3800016E+03, 0.1387253E+04, 0.1953106E+03,
          0.7850000E+03, 0.1375830E+04, 0.1791920E+03,
          0.3798669E+03, 0.1187657E+04, 0.2351945E+03,
          0.7850000E+03, 0.1179910E+04, 0.2183680E+03,
          0.3797720E+03, 0.9866819E+03, 0.2593372E+03,
          0.7850000E+03, 0.9827670E+03, 0.2420690E+03,
          0.3797229E+03, 0.7850000E+03, 0.2674184E+03,
          0.7850000E+03, 0.7850000E+03, 0.2500020E+03,
          0.3797229E+03, 0.5833181E+03, 0.2593273E+03,
          0.7850000E+03, 0.5872330E+03, 0.2420690E+03,
          0.3797720E+03, 0.3823468E+03, 0.2351755E+03,
          0.7850000E+03, 0.3900940E+03, 0.2183680E+03,
          0.3798669E+03, 0.1827513E+03, 0.1952836E+03,
          0.7850000E+03, 0.1941740E+03, 0.1791920E+03,
          0.3800017E+03,-0.1329162E+02, 0.1405985E+03,
          0.7850000E+03, 0.0000000E+00, 0.1250010E+03,
          0.5818224E+03, 0.1583411E+04, 0.1649938E+03,
          0.5818223E+03, 0.1387389E+04, 0.2197015E+03,
          0.5817529E+03, 0.1187752E+04, 0.2596123E+03,
          0.5817040E+03, 0.9867308E+03, 0.2837737E+03,
          0.5816788E+03, 0.7850000E+03, 0.2918636E+03,
          0.5816787E+03, 0.5832691E+03, 0.2837706E+03,
          0.5817040E+03, 0.3822517E+03, 0.2596064E+03,
          0.5817529E+03, 0.1826152E+03, 0.2196931E+03,
          0.5818224E+03,-0.1341026E+02, 0.1649938E+03,
          0.7850000E+03, 0.1583451E+04, 0.1731971E+03,
          0.7850000E+03, 0.1387460E+04, 0.2278964E+03,
          0.7850000E+03, 0.1187802E+04, 0.2678199E+03,
          0.7850000E+03, 0.9867562E+03, 0.2919900E+03,
          0.7850000E+03, 0.7850000E+03, 0.3000830E+03,
          0.7850000E+03, 0.5832438E+03, 0.2919900E+03,
          0.7850000E+03, 0.3822023E+03, 0.2678198E+03,
          0.7850000E+03, 0.1825444E+03, 0.2278964E+03,
          0.9843040E+03, 0.1570000E+04, 0.1169430E+03,
          0.7850000E+03,-0.1345080E+02, 0.1731971E+03,
          0.9843040E+03, 0.1375830E+04, 0.1711340E+03,
          0.9881776E+03, 0.1583411E+04, 0.1649938E+03,
          0.9843040E+03, 0.1179910E+04, 0.2103100E+03,
          0.9881777E+03, 0.1387460E+04, 0.2196818E+03,
          0.9843040E+03, 0.9827670E+03, 0.2340110E+03,
          0.9882471E+03, 0.1187802E+04, 0.2596024E+03,
          0.9843040E+03, 0.7850000E+03, 0.2419450E+03,
          0.9882960E+03, 0.9867563E+03, 0.2837706E+03,
          0.9843040E+03, 0.5872330E+03, 0.2340110E+03,
          0.9883212E+03, 0.7850000E+03, 0.2918636E+03,
          0.9843040E+03, 0.3900940E+03, 0.2103100E+03,
          0.9883214E+03, 0.5832437E+03, 0.2837696E+03,
          0.9843040E+03, 0.1941740E+03, 0.1711340E+03,
          0.9882960E+03, 0.3822023E+03, 0.2596004E+03,
          0.9843040E+03, 0.0000000E+00, 0.1169430E+03,
          0.9882471E+03, 0.1825444E+03, 0.2196790E+03,
          0.9881776E+03,-0.1341025E+02, 0.1649938E+03,
          0.1189996E+04, 0.1583292E+04, 0.1405984E+03,
          0.1189996E+04, 0.1387389E+04, 0.1952726E+03,
          0.1190131E+04, 0.1187752E+04, 0.2351755E+03,
          0.1190226E+04, 0.9867308E+03, 0.2593313E+03,
          0.1190275E+04, 0.7850000E+03, 0.2674184E+03,
          0.1190275E+04, 0.5832691E+03, 0.2593253E+03,
          0.1190226E+04, 0.3822517E+03, 0.2351640E+03,
          0.1190131E+04, 0.1826152E+03, 0.1952564E+03,
          0.1189996E+04,-0.1329161E+02, 0.1405985E+03,
          0.1389293E+04, 0.1583104E+04, 0.1006033E+03,
          0.1389293E+04, 0.1387253E+04, 0.1552628E+03,
          0.1389486E+04, 0.1187657E+04, 0.1951351E+03,
          0.1389621E+04, 0.9866819E+03, 0.2192696E+03,
          0.1389691E+04, 0.7850000E+03, 0.2273466E+03,
          0.1389691E+04, 0.5833181E+03, 0.2192556E+03,
          0.1182340E+04, 0.1570000E+04, 0.9297240E+02,
          0.1389621E+04, 0.3823468E+03, 0.1951079E+03,
          0.1182340E+04, 0.1375830E+04, 0.1471630E+03,
          0.1389486E+04, 0.1827513E+03, 0.1552242E+03,
          0.1182340E+04, 0.1179910E+04, 0.1863390E+03,
          0.1389293E+04,-0.1310389E+02, 0.1006034E+03,
          0.1182340E+04, 0.9827670E+03, 0.2100400E+03,
          0.1582996E+04, 0.1582979E+04, 0.4650422E+02,
          0.1182340E+04, 0.7850000E+03, 0.2179740E+03,
          0.1583123E+04, 0.1387062E+04, 0.1011471E+03,
          0.1182340E+04, 0.5872330E+03, 0.2100400E+03,
          0.1583310E+04, 0.1187524E+04, 0.1409940E+03,
          0.1182340E+04, 0.3900940E+03, 0.1863390E+03,
          0.1583428E+04, 0.9866132E+03, 0.1651146E+03,
          0.1182340E+04, 0.1941740E+03, 0.1471630E+03,
          0.1583468E+04, 0.7850000E+03, 0.1731917E+03,
          0.1182340E+04, 0.0000000E+00, 0.9297240E+02,
          0.1583428E+04, 0.5833867E+03, 0.1651146E+03,
          0.1583310E+04, 0.3824803E+03, 0.1409940E+03,
          0.1583123E+04, 0.1829424E+03, 0.1011471E+03,
          0.1582996E+04,-0.1297854E+02, 0.4650428E+02,
          0.1378030E+04, 0.1570000E+04, 0.5364970E+02,
          0.1378030E+04, 0.1375830E+04, 0.1078400E+03,
          0.1378030E+04, 0.1179910E+04, 0.1470160E+03,
          0.1378030E+04, 0.9827670E+03, 0.1707170E+03,
          0.1378030E+04, 0.7850000E+03, 0.1786510E+03,
          0.1378030E+04, 0.5872330E+03, 0.1707170E+03,
          0.1378030E+04, 0.3900940E+03, 0.1470160E+03,
          0.1378030E+04, 0.1941740E+03, 0.1078400E+03,
          0.1378030E+04, 0.0000000E+00, 0.5364970E+02,
          0.1570000E+04, 0.1570000E+04, 0.0000000E+00,
          0.1570000E+04, 0.1375830E+04, 0.5419060E+02,
          0.1570000E+04, 0.1179910E+04, 0.9336650E+02,
          0.1570000E+04, 0.9827670E+03, 0.1170670E+03,
          0.1570000E+04, 0.7850000E+03, 0.1250010E+03,
          0.1570000E+04, 0.5872330E+03, 0.1170670E+03,
          0.1570000E+04, 0.3900940E+03, 0.9336650E+02,
          0.1570000E+04, 0.1941740E+03, 0.5419060E+02,
          0.1570000E+04, 0.0000000E+00, 0.0000000E+00,]
    #ELEM_TETRA4
    ############
    #ELEM_TETRA5
    ############
    #ELEM_TETRA6
    ############
    #ELEM_TETRA8
    ############
    M65      = [8,      1,      3,     19,     18,      0,      2,     36,     34,      1]
    M66      = [8,      3,      5,     20,     19,      2,      4,     38,     36,      2]
    M67      = [8,      5,      7,     21,     20,      4,      6,     40,     38,      3]
    M68      = [8,      7,      9,     22,     21,      6,      8,     42,     40,      4]
    M69      = [8,      9,     11,     23,     22,      8,     10,     44,     42,      5]
    M70      = [8,     11,     13,     24,     23,     10,     12,     46,     44,      6]
    M71      = [8,     13,     15,     25,     24,     12,     14,     48,     46,      7]
    M72      = [8,     15,     17,     26,     25,     14,     16,     50,     48,      8]
    M73      = [8,     18,     19,     28,     27,     34,     36,     70,     68,      9]
    M74      = [8,     19,     20,     29,     28,     36,     38,     72,     70,     10]
    M75      = [8,     20,     21,     30,     29,     38,     40,     74,     72,     11]
    M76      = [8,     21,     22,     31,     30,     40,     42,     76,     74,     12]
    M77      = [8,     22,     23,     32,     31,     42,     44,     78,     76,     13]
    M78      = [8,     23,     24,     33,     32,     44,     46,     80,     78,     14]
    M79      = [8,     24,     25,     35,     33,     46,     48,     82,     80,     15]
    M80      = [8,     25,     26,     37,     35,     48,     50,     84,     82,     16]
    M81      = [8,     27,     28,     41,     39,     68,     70,    104,    102,     17]
    M82      = [8,     28,     29,     43,     41,     70,     72,    106,    104,     18]
    M83      = [8,     29,     30,     45,     43,     72,     74,    108,    106,     19]
    M84      = [8,     30,     31,     47,     45,     74,     76,    110,    108,     20]
    M85      = [8,     31,     32,     49,     47,     76,     78,    112,    110,     21]
    M86      = [8,     32,     33,     51,     49,     78,     80,    114,    112,     22]
    M87      = [8,     33,     35,     52,     51,     80,     82,    116,    114,     23]
    M88      = [8,     35,     37,     53,     52,     82,     84,    118,    116,     24]
    M89      = [8,     39,     41,     55,     54,    102,    104,    138,    136,     25]
    M90      = [8,     41,     43,     56,     55,    104,    106,    140,    138,     26]
    M91      = [8,     43,     45,     57,     56,    106,    108,    142,    140,     27]
    M92      = [8,     45,     47,     58,     57,    108,    110,    144,    142,     28]
    M93      = [8,     47,     49,     59,     58,    110,    112,    146,    144,     29]
    M94      = [8,     49,     51,     60,     59,    112,    114,    148,    146,     30]
    M95      = [8,     51,     52,     61,     60,    114,    116,    150,    148,     31]
    M96      = [8,     52,     53,     62,     61,    116,    118,    152,    150,     32]
    M97      = [8,     54,     55,     64,     63,    136,    138,    172,    170,     33]
    M98      = [8,     55,     56,     65,     64,    138,    140,    174,    172,     34]
    M99      = [8,     56,     57,     66,     65,    140,    142,    176,    174,     35]
    M100     = [8,     57,     58,     67,     66,    142,    144,    178,    176,     36]
    M101     = [8,     58,     59,     69,     67,    144,    146,    180,    178,     37]
    M102     = [8,     59,     60,     71,     69,    146,    148,    182,    180,     38]
    M103     = [8,     60,     61,     73,     71,    148,    150,    184,    182,     39]
    M104     = [8,     61,     62,     75,     73,    150,    152,    186,    184,     40]
    M105     = [8,     63,     64,     79,     77,    170,    172,    206,    204,     41]
    M106     = [8,     64,     65,     81,     79,    172,    174,    208,    206,     42]
    M107     = [8,     65,     66,     83,     81,    174,    176,    210,    208,     43]
    M108     = [8,     66,     67,     85,     83,    176,    178,    212,    210,     44]
    M109     = [8,     67,     69,     86,     85,    178,    180,    214,    212,     45]
    M110     = [8,     69,     71,     87,     86,    180,    182,    216,    214,     46]
    M111     = [8,     71,     73,     88,     87,    182,    184,    218,    216,     47]
    M112     = [8,     73,     75,     89,     88,    184,    186,    220,    218,     48]
    M113     = [8,     77,     79,     91,     90,    204,    206,    226,    225,     49]
    M114     = [8,     79,     81,     92,     91,    206,    208,    227,    226,     50]
    M115     = [8,     81,     83,     93,     92,    208,    210,    228,    227,     51]
    M116     = [8,     83,     85,     94,     93,    210,    212,    229,    228,     52]
    M117     = [8,     85,     86,     95,     94,    212,    214,    230,    229,     53]
    M118     = [8,     86,     87,     96,     95,    214,    216,    231,    230,     54]
    M119     = [8,     87,     88,     97,     96,    216,    218,    232,    231,     55]
    M120     = [8,     88,     89,     98,     97,    218,    220,    233,    232,     56]
    M121     = [8,     90,     91,    100,     99,    225,    226,    235,    234,     57]
    M122     = [8,     91,     92,    101,    100,    226,    227,    236,    235,     58]
    M123     = [8,     92,     93,    103,    101,    227,    228,    237,    236,     59]
    M124     = [8,     93,     94,    105,    103,    228,    229,    238,    237,     60]
    M125     = [8,     94,     95,    107,    105,    229,    230,    239,    238,     61]
    M126     = [8,     95,     96,    109,    107,    230,    231,    240,    239,     62]
    M127     = [8,     96,     97,    111,    109,    231,    232,    241,    240,     63]
    M128     = [8,     97,     98,    113,    111,    232,    233,    242,    241,     64]
    M129     = [8,      0,      2,     36,     34,    115,    117,    127,    126,     65]
    M130     = [8,      2,      4,     38,     36,    117,    119,    128,    127,     66]
    M131     = [8,      4,      6,     40,     38,    119,    120,    129,    128,     67]
    M132     = [8,      6,      8,     42,     40,    120,    121,    130,    129,     68]
    M133     = [8,      8,     10,     44,     42,    121,    122,    131,    130,     69]
    M134     = [8,     10,     12,     46,     44,    122,    123,    132,    131,     70]
    M135     = [8,     12,     14,     48,     46,    123,    124,    133,    132,     71]
    M136     = [8,     14,     16,     50,     48,    124,    125,    134,    133,     72]
    M137     = [8,     34,     36,     70,     68,    126,    127,    137,    135,     73]
    M138     = [8,     36,     38,     72,     70,    127,    128,    139,    137,     74]
    M139     = [8,     38,     40,     74,     72,    128,    129,    141,    139,     75]
    M140     = [8,     40,     42,     76,     74,    129,    130,    143,    141,     76]
    M141     = [8,     42,     44,     78,     76,    130,    131,    145,    143,     77]
    M142     = [8,     44,     46,     80,     78,    131,    132,    147,    145,     78]
    M143     = [8,     46,     48,     82,     80,    132,    133,    149,    147,     79]
    M144     = [8,     48,     50,     84,     82,    133,    134,    151,    149,     80]
    M145     = [8,     68,     70,    104,    102,    135,    137,    154,    153,     81]
    M146     = [8,     70,     72,    106,    104,    137,    139,    155,    154,     82]
    M147     = [8,     72,     74,    108,    106,    139,    141,    156,    155,     83]
    M148     = [8,     74,     76,    110,    108,    141,    143,    157,    156,     84]
    M149     = [8,     76,     78,    112,    110,    143,    145,    158,    157,     85]
    M150     = [8,     78,     80,    114,    112,    145,    147,    159,    158,     86]
    M151     = [8,     80,     82,    116,    114,    147,    149,    160,    159,     87]
    M152     = [8,     82,     84,    118,    116,    149,    151,    161,    160,     88]
    M153     = [8,    102,    104,    138,    136,    153,    154,    163,    162,     89]
    M154     = [8,    104,    106,    140,    138,    154,    155,    164,    163,     90]
    M155     = [8,    106,    108,    142,    140,    155,    156,    165,    164,     91]
    M156     = [8,    108,    110,    144,    142,    156,    157,    166,    165,     92]
    M157     = [8,    110,    112,    146,    144,    157,    158,    167,    166,     93]
    M158     = [8,    112,    114,    148,    146,    158,    159,    168,    167,     94]
    M159     = [8,    114,    116,    150,    148,    159,    160,    169,    168,     95]
    M160     = [8,    116,    118,    152,    150,    160,    161,    171,    169,     96]
    M161     = [8,    136,    138,    172,    170,    162,    163,    175,    173,     97]
    M162     = [8,    138,    140,    174,    172,    163,    164,    177,    175,     98]
    M163     = [8,    140,    142,    176,    174,    164,    165,    179,    177,     99]
    M164     = [8,    142,    144,    178,    176,    165,    166,    181,    179,    100]
    M165     = [8,    144,    146,    180,    178,    166,    167,    183,    181,    101]
    M166     = [8,    146,    148,    182,    180,    167,    168,    185,    183,    102]
    M167     = [8,    148,    150,    184,    182,    168,    169,    187,    185,    103]
    M168     = [8,    150,    152,    186,    184,    169,    171,    188,    187,    104]
    M169     = [8,    170,    172,    206,    204,    173,    175,    190,    189,    105]
    M170     = [8,    172,    174,    208,    206,    175,    177,    191,    190,    106]
    M171     = [8,    174,    176,    210,    208,    177,    179,    192,    191,    107]
    M172     = [8,    176,    178,    212,    210,    179,    181,    193,    192,    108]
    M173     = [8,    178,    180,    214,    212,    181,    183,    194,    193,    109]
    M174     = [8,    180,    182,    216,    214,    183,    185,    195,    194,    110]
    M175     = [8,    182,    184,    218,    216,    185,    187,    196,    195,    111]
    M176     = [8,    184,    186,    220,    218,    187,    188,    197,    196,    112]
    M177     = [8,    204,    206,    226,    225,    189,    190,    199,    198,    113]
    M178     = [8,    206,    208,    227,    226,    190,    191,    200,    199,    114]
    M179     = [8,    208,    210,    228,    227,    191,    192,    201,    200,    115]
    M180     = [8,    210,    212,    229,    228,    192,    193,    202,    201,    116]
    M181     = [8,    212,    214,    230,    229,    193,    194,    203,    202,    117]
    M182     = [8,    214,    216,    231,    230,    194,    195,    205,    203,    118]
    M183     = [8,    216,    218,    232,    231,    195,    196,    207,    205,    119]
    M184     = [8,    218,    220,    233,    232,    196,    197,    209,    207,    120]
    M185     = [8,    225,    226,    235,    234,    198,    199,    213,    211,    121]
    M186     = [8,    226,    227,    236,    235,    199,    200,    215,    213,    122]
    M187     = [8,    227,    228,    237,    236,    200,    201,    217,    215,    123]
    M188     = [8,    228,    229,    238,    237,    201,    202,    219,    217,    124]
    M189     = [8,    229,    230,    239,    238,    202,    203,    221,    219,    125]
    M190     = [8,    230,    231,    240,    239,    203,    205,    222,    221,    126]
    M191     = [8,    231,    232,    241,    240,    205,    207,    223,    222,    127]
    M192     = [8,    232,    233,    242,    241,    207,    209,    224,    223,    128]
      #ELEM_TETRA4
      ############
      #ELEM_TETRA5
      ############
      #ELEM_TETRA6
      ############
      #ELEM_TETRA8
      ############
    Mesh_M1 = M65      + \
            M66      + \
            M67      + \
            M68      + \
            M69      + \
            M70      + \
            M71      + \
            M72      + \
            M73      + \
            M74      + \
            M75      + \
            M76      + \
            M77      + \
            M78      + \
            M79      + \
            M80      + \
            M81      + \
            M82      + \
            M83      + \
            M84      + \
            M85      + \
            M86      + \
            M87      + \
            M88      + \
            M89      + \
            M90      + \
            M91      + \
            M92      + \
            M93      + \
            M94      + \
            M95      + \
            M96      + \
            M97      + \
            M98      + \
            M99      + \
            M100     + \
            M101     + \
            M102     + \
            M103     + \
            M104     + \
            M105     + \
            M106     + \
            M107     + \
            M108     + \
            M109     + \
            M110     + \
            M111     + \
            M112     + \
            M113     + \
            M114     + \
            M115     + \
            M116     + \
            M117     + \
            M118     + \
            M119     + \
            M120     + \
            M121     + \
            M122     + \
            M123     + \
            M124     + \
            M125     + \
            M126     + \
            M127     + \
            M128     + \
            M129     + \
            M130     + \
            M131     + \
            M132     + \
            M133     + \
            M134     + \
            M135     + \
            M136     + \
            M137     + \
            M138     + \
            M139     + \
            M140     + \
            M141     + \
            M142     + \
            M143     + \
            M144     + \
            M145     + \
            M146     + \
            M147     + \
            M148     + \
            M149     + \
            M150     + \
            M151     + \
            M152     + \
            M153     + \
            M154     + \
            M155     + \
            M156     + \
            M157     + \
            M158     + \
            M159     + \
            M160     + \
            M161     + \
            M162     + \
            M163     + \
            M164     + \
            M165     + \
            M166     + \
            M167     + \
            M168     + \
            M169     + \
            M170     + \
            M171     + \
            M172     + \
            M173     + \
            M174     + \
            M175     + \
            M176     + \
            M177     + \
            M178     + \
            M179     + \
            M180     + \
            M181     + \
            M182     + \
            M183     + \
            M184     + \
            M185     + \
            M186     + \
            M187     + \
            M188     + \
            M189     + \
            M190     + \
            M191     + \
            M192  
            
    S193     =[ 10,  4 ,132,     133,     149,     147,     11]
    S194     =[      4 ,160,     161,     171,     169,     12]
    S195     =[      4 ,157,     158,     167,     166,     13]
    S196     =[      4 ,194,     195,     205,     203,     14]
    S197     =[      4 ,179,     181,     193,     192,     15]
    S198     =[      4 ,191,     192,     201,     200,     16]
    S199     =[      4 ,154,     155,     164,     163,     17]
    S200     =[      4 ,128,     129,     141,     139,     18]
    S201     =[      4 ,127,     128,     139,     137,     19]
    S202     =[      4 ,115,     117,     127,     126,     20]
   
    Surf_M1_INT = S193     + \
            S194     + \
            S195     + \
            S196     + \
            S197     + \
            S198     + \
            S199     + \
            S200     + \
            S201     + \
            S202
                         
    bulk = BULK_MATERIAL (solfec,
                          model = 'KIRCHHOFF',
                          young = 1.29E+08,
                          poisson = 0.2,
                          density = 1.E+03)
                                            
    Msh_M1 = MESH(Nodes_M1,Mesh_M1,Surf_M1_INT)
    
    Msh_M2 = MESH(Nodes_M1,Mesh_M1,1)
    
    Mesh_final = Msh_M1
   
      
    Point_A=Mesh_final.node(144)
    
    No_Trait=[]  
    No_Trait.append(Mesh_final.node(72 ))
    No_Trait.append(Mesh_final.node(74 ))
    No_Trait.append(Mesh_final.node(76 ))
    No_Trait.append(Mesh_final.node(78 ))            
    No_Trait.append(Mesh_final.node(80 ))
    No_Trait.append(Mesh_final.node(106))
    No_Trait.append(Mesh_final.node(108))
    No_Trait.append(Mesh_final.node(110))
    No_Trait.append(Mesh_final.node(112))
    No_Trait.append(Mesh_final.node(114))
    No_Trait.append(Mesh_final.node(140))
    No_Trait.append(Mesh_final.node(142))
    No_Trait.append(Mesh_final.node(144))
    No_Trait.append(Mesh_final.node(146))
    No_Trait.append(Mesh_final.node(148))
    No_Trait.append(Mesh_final.node(174))
    No_Trait.append(Mesh_final.node(176))
    No_Trait.append(Mesh_final.node(178))
    No_Trait.append(Mesh_final.node(180))
    No_Trait.append(Mesh_final.node(182))
    No_Trait.append(Mesh_final.node(208))
    No_Trait.append(Mesh_final.node(210))
    No_Trait.append(Mesh_final.node(212))
    No_Trait.append(Mesh_final.node(214))                    
    No_Trait.append(Mesh_final.node(216))
    
    
    FIX_XYZ=[]
    FIX_XYZ.append(Mesh_final.node(0))
    FIX_XYZ.append(Mesh_final.node(2))
    FIX_XYZ.append(Mesh_final.node(4))
    FIX_XYZ.append(Mesh_final.node(6))
    FIX_XYZ.append(Mesh_final.node(8))
    FIX_XYZ.append(Mesh_final.node(10))
    FIX_XYZ.append(Mesh_final.node(12))
    FIX_XYZ.append(Mesh_final.node(14))
    FIX_XYZ.append(Mesh_final.node(16))
    FIX_XYZ.append(Mesh_final.node(34))
    FIX_XYZ.append(Mesh_final.node(50))
    FIX_XYZ.append(Mesh_final.node(68))
    FIX_XYZ.append(Mesh_final.node(84))
    FIX_XYZ.append(Mesh_final.node(102))
    FIX_XYZ.append(Mesh_final.node(118))
    FIX_XYZ.append(Mesh_final.node(136))
    FIX_XYZ.append(Mesh_final.node(152))
    FIX_XYZ.append(Mesh_final.node(170))
    FIX_XYZ.append(Mesh_final.node(186))
    FIX_XYZ.append(Mesh_final.node(204))
    FIX_XYZ.append(Mesh_final.node(220))
    FIX_XYZ.append(Mesh_final.node(225))
    FIX_XYZ.append(Mesh_final.node(233))
    FIX_XYZ.append(Mesh_final.node(234))
    FIX_XYZ.append(Mesh_final.node(235))
    FIX_XYZ.append(Mesh_final.node(236))
    FIX_XYZ.append(Mesh_final.node(237))
    FIX_XYZ.append(Mesh_final.node(238))
    FIX_XYZ.append(Mesh_final.node(239))
    FIX_XYZ.append(Mesh_final.node(240))
    FIX_XYZ.append(Mesh_final.node(241))
    FIX_XYZ.append(Mesh_final.node(242))

    
    Bod_M1 = BODY (solfec, 'FINITE_ELEMENT',Mesh_final,bulk)
    
    Fix_direc_X=(1.,0.,0.)
    Fix_direc_Y=(0.,1.,0.)
    Fix_direc_Z=(0.,0.,1.)    

    for fix in FIX_XYZ:
      FIX_POINT (Bod_M1, fix)
      
    P193=44000 
    P194=56000
    P195=96000
    P196=32000
    P197=44000
    P198=78000
    P199=68000
    P200=44000
    P201=-22000
    P202=44000
   
    PRESSURE (Bod_M1, 11, -P193)
    PRESSURE (Bod_M1, 12, -P194)
    PRESSURE (Bod_M1, 13, -P195)    
    PRESSURE (Bod_M1, 14, -P196)
    PRESSURE (Bod_M1, 15, -P197)
    PRESSURE (Bod_M1, 16, -P198)
    PRESSURE (Bod_M1, 17, -P199)
    PRESSURE (Bod_M1, 18, -P200)
    PRESSURE (Bod_M1, 19, -P201)    
    PRESSURE (Bod_M1, 20, -P202)    


    nt = NEWTON_SOLVER (1E-12, locdyn = 'OFF')
    OUTPUT(solfec, outstep)
    if not VIEWER() and solfec.mode == 'WRITE':
      solfec.verbose = '%'
    RUN (solfec, nt, stop)
    return solfec

# data
step = 2
stop = 300
outstep = 30

# calculate
solfec = create_simulation (step, stop, outstep)

# read results
if not VIEWER():
  solfec = create_simulation (step, stop, outstep)
  if solfec.mode != 'READ':
    print 'READ ERROR'
    import sys
    sys.exit(1)

  body = solfec.bodies[0]
  mesh0 = COPY(body.mesh)

  data_dz = [
#       1-based      DX, DY, DZ                  DX, DY, DZ
#       node       Solfec 841200b                Code_Aster 
        (73,   (0.128, -0.151, -1.610),    (0.126, -0.148, -1.571)),
	(75,   (0.180, -0.107, -2.075),    (0.176, -0.105, -2.023)),
	(77,   (0.188, -0.011, -2.177),    (0.185, -0.011, -2.120)),
	(79,   (0.180,  0.088, -2.046),    (0.177,  0.087, -1.995)),
	(81,   (0.155,  0.156, -1.687),    (0.153,  0.154, -1.649)),
	(107,  (0.083, -0.235, -2.245),    (0.081, -0.231, -2.189)),
	(109,  (0.113, -0.152, -2.792),    (0.110, -0.149, -2.718)),
	(111,  (0.133, -0.015, -3.086),    (0.131, -0.015, -3.008)),
	(113,  (0.129,  0.122, -2.854),    (0.127,  0.120, -2.783)),
	(115,  (0.098,  0.190, -2.111),    (0.096,  0.187, -2.060)),
	(141, (-0.023, -0.274, -2.548),   (-0.023, -0.270, -2.482)),
	(143, (-0.027, -0.182, -3.174),   (-0.027, -0.179, -3.089)),
	(145, (-0.017, -0.026, -3.453),   (-0.017, -0.025, -3.364)),
	(147, (-0.004,  0.122, -3.082),   (-0.004,  0.120, -3.003)),
	(149,  (0.002,  0.184, -2.171),    (0.002,  0.180, -2.115)),
	(175, (-0.146, -0.262, -2.467),   (-0.144, -0.258, -2.403)),
	(177, (-0.190, -0.189, -3.170),   (-0.188, -0.186, -3.088)),
	(179, (-0.182, -0.040, -3.236),   (-0.180, -0.039, -3.151)),
	(181, (-0.135,  0.091, -2.711),   (-0.133,  0.089, -2.639)),
	(183, (-0.080,  0.142, -1.886),   (-0.078,  0.139, -1.837)),
	(209, (-0.236, -0.223, -2.118),   (-0.233, -0.220, -2.067)),
	(211, (-0.300, -0.167, -2.676),   (-0.297, -0.164, -2.611)),
	(213, (-0.270, -0.041, -2.549),   (-0.266, -0.041, -2.484)),
	(215, (-0.200,  0.057, -2.058),   (-0.197,  0.055, -2.005)),
	(217, (-0.117,  0.089, -1.405),   (-0.115,  0.087, -1.369))]

#   tolerance Solfec c060f54
  tole_dz = [(0.017,  0.017,  0.025),
             (0.020,  0.020,  0.026),
             (0.018,  0.022,  0.027),
             (0.019,  0.012,  0.025),
             (0.012,  0.011,  0.023),
             (0.024,  0.016,  0.026),
             (0.023,  0.020,  0.027),
             (0.015,  0.002,  0.026),
             (0.013,  0.013,  0.025),
             (0.021,  0.016,  0.025),
             (0.005,  0.016,  0.027),
             (0.000,  0.015,  0.028),
             (0.012,  0.024,  0.027),
             (0.101,  0.014,  0.026),
             (0.199,  0.020,  0.026),
             (0.014,  0.015,  0.027),
             (0.011,  0.015,  0.027),
             (0.012,  0.018,  0.027),
             (0.018,  0.022,  0.027),
             (0.022,  0.022,  0.027),
             (0.011,  0.013,  0.024),
             (0.011,  0.016,  0.025),
             (0.015,  0.009,  0.026),
             (0.017,  0.028,  0.026),
             (0.019,  0.024,  0.026)]

  def tolerance_epsilon (tolerance):
    if tolerance > 1.0: return 0.01*tolerance
    tstr = "%.15f" % tolerance
    teps = 0.000000000000001
    j = len(tstr)-1
    while j > 0 and tstr[j] == '0':
      teps = teps * 10.
      j = j - 1
    return teps

  failed = False
  SEEK (solfec, stop)
  label = ('DX', 'DY', 'DZ')
  for (item, tole) in zip(data_dz, tole_dz):
    pnt = mesh0.node(item[0]-1)
    disp = DISPLACEMENT (body, pnt)
    for i in range(0,3):
      Value = disp[i]
      Code_Aster_Ref = item[2][i]
      error = abs(Value-Code_Aster_Ref)/abs(Code_Aster_Ref) 
      tolerance = tole[i] + tolerance_epsilon(tole[i])

      if error > tolerance:
	failed = True
	print '\b\b\b\bFAILED', 
	print '(Computed displacement %s at node %d was %g' % (label[i], item[0]-1, Value), 'while reference is %g)' % Code_Aster_Ref,
	print '-->(error %g, while tolerance %g)' % (error, tolerance)

  # Stress nodes
  Stress_nodes = [73, 75, 77, 79, 81, 107, 109, 111, 113, 115, 141, 143,
                  145, 147, 149, 175, 177, 179, 181, 183, 209, 211, 213, 215, 217]

  # Solfec 841200b stress
  Solfec_Sx = [-8.98E+04, -1.11E+05, -1.15E+05, -1.06E+05, -8.52E+04, -9.84E+04,
	       -1.16E+05, -1.28E+05, -1.15E+05, -8.29E+04, -1.04E+05, -1.23E+05,
	       -1.33E+05, -1.17E+05, -8.16E+04, -1.01E+05, -1.26E+05, -1.30E+05,
	       -1.11E+05, -8.04E+04, -9.65E+04, -1.22E+05, -1.19E+05, -1.02E+05, -7.57E+04]
  Solfec_Sy = [-7.85E+04, -8.49E+04, -8.66E+04, -8.68E+04, -8.46E+04, -1.06E+05,
	       -1.14E+05, -1.20E+05, -1.20E+05, -1.09E+05, -1.20E+05, -1.27E+05,
	       -1.31E+05, -1.30E+05, -1.19E+05, -1.11E+05, -1.19E+05, -1.20E+05,
	       -1.14E+05, -1.06E+05, -9.85E+04, -1.01E+05, -9.96E+04, -9.42E+04, -8.44E+04]
  Solfec_Sz = [-1.05E+04, -1.93E+04, 6.27E+00, -4.57E+02, -2.13E+04, -2.30E+04,
		5.22E+03, -2.84E+04, -2.58E+04, 2.56E+01, -2.76E+04, 2.73E+03,
	       -2.67E+04, -2.73E+04, -1.84E+03, 2.23E+02, -1.49E+04, -1.32E+04,
		5.12E+03, -6.18E+03, -2.69E+04,-3.80E+04, -1.63E+04, -1.40E+04, -1.43E+04]

  # Code_Aster stress
  Code_Aster_Sx = [-8.85E+04, -1.09E+05, -1.13E+05, -1.04E+05, -8.41E+04, -9.71E+04,
		   -1.14E+05, -1.27E+05, -1.14E+05, -8.18E+04, -1.02E+05, -1.21E+05,
		   -1.32E+05, -1.16E+05, -8.04E+04, -9.94E+04, -1.25E+05, -1.29E+05,
		   -1.09E+05, -7.92E+04, -9.54E+04, -1.21E+05, -1.17E+05, -1.01E+05, -7.45E+04]

  Code_Aster_Sy = [-7.74E+04, -8.37E+04, -8.54E+04, -8.55E+04, -8.35E+04, -1.05E+05,
		   -1.13E+05, -1.19E+05, -1.18E+05, -1.08E+05, -1.18E+05, -1.26E+05,
		   -1.29E+05, -1.29E+05, -1.17E+05, -1.10E+05, -1.18E+05, -1.18E+05,
		   -1.13E+05, -1.04E+05, -9.76E+04, -9.99E+04, -9.85E+04, -9.29E+04, -8.31E+04]

  Code_Aster_Sz = [-1.06E+04, -1.95E+04, -1.52E+02, -6.46E+02, -2.15E+04, -2.33E+04,
		    5.02E+03, -2.87E+04, -2.62E+04, -2.49E+02, -2.79E+04, 2.52E+03,
		   -2.72E+04, -2.77E+04, -2.03E+03, -7.27E+01, -1.54E+04, -1.36E+04,
		    4.91E+03, -6.29E+03, -2.73E+04, -3.86E+04, -1.66E+04, -1.41E+04, -1.44E+04]

  #   tolerance Solfec c060f54
  tole = [(0.1442,  0.0908,  0.3521),
          (0.3052,  0.0087,  0.2650),
          (0.3298,  0.0114,  93.2919), #XXX: big
          (0.2718,  0.0126,  21.1863), #XXX: big
          (0.0995,  0.0111,  0.3334),
          (0.2200,  0.1959,  0.3849),
          (0.3357,  0.2529,  3.8551),
          (0.4037,  0.2905,  0.5006),
          (0.3357,  0.2845,  0.4530),
          (0.0741,  0.2183,  56.5597), #XXX: big
          (0.2575,  0.2845,  0.4863),
          (0.3741,  0.3299,  6.6874),
          (0.4262,  0.3455,  0.4731),
          (0.3471,  0.3455,  0.4826),
          (0.0580,  0.2784,  6.0603),
          (0.2381,  0.2325,  196.1440), #XXX: big
          (0.3941,  0.2845,  0.0693),
          (0.4129,  0.2845,  0.0539),
          (0.3052,  0.2529,  3.9190),
          (0.0437,  0.1882,  1.2786),
          (0.2061,  0.1350,  0.4750),
          (0.3741,  0.1549,  0.6287),
          (0.3527,  0.1429,  0.1366),
          (0.2501,  0.0912,  0.0165),
          (0.0166,  0.0160,  0.0047)]

  label = ('SX', 'SY', 'SZ')
  for i in range (0, len(Stress_nodes)):
    pnt = mesh0.node(item[0]-1)
    stre = STRESS (body, pnt)
    refe = (Code_Aster_Sx[i],
            Code_Aster_Sy[i],
	    Code_Aster_Sz[i])
    for j in range (0, 3):
      Value = stre[j]
      Code_Aster_Ref = refe[j]
      error = abs(Value-Code_Aster_Ref)/abs(Code_Aster_Ref) 
      tolerance = tole[i][j] + tolerance_epsilon(tole[i][j])

      if error > tolerance:
	failed = True
	print '\b\b\b\bFAILED', 
	print '(Computed stress %s at node %d was %g' % (label[j], item[0]-1, Value), 'while reference is %g)' % Code_Aster_Ref,
	print '-->(error %g, while tolerance %g)' % (error, tolerance)

  if not failed: print '\b\b\b\bPASSED'
